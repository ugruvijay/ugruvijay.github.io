{"version":3,"sources":["components/Timeline/Timeline.js","utils/resumeData.js","assets/images/dp.jpg","components/Profile/Profile.js","components/Header/Header.js","components/Footer/Footer.js","pages/Portfolio/Portfolio.js","pages/Resume/Resume.js","App.js","reportWebVitals.js","index.js"],"names":["CustomTimelineSeparator","TimelineSeparator","className","TimelineDot","variant","TimelineConnector","CustomTimeline","title","icon","children","Timeline","TimelineItem","TimelineContent","Typography","resumeData","name","email","address","phone","socials","Facebook","link","text","Twitter","LinkedIn","GitHub","about","experiences","subtitle","date","description","educations","projects","tag","image","caption","links","skills","CustomTimelineItem","href","target","rel","Profile","src","dp","alt","Object","keys","map","key","i","withRouter","props","pathName","location","console","log","Navbar","expand","sticky","Nav","Link","as","NavLink","to","Brand","HomeRounded","Toggle","Collapse","Footer","Portfolio","useState","tabValue","setTabValue","projectDialog","setProjectDialog","Grid","container","spacing","item","xs","Tabs","TabIndicatorProps","style","background","value","onChange","event","newValue","Tab","label","Set","project","Fragment","sm","md","lg","Grow","in","timeout","Card","onClick","CardActionArea","CardMedia","CardContent","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Resume","experience","education","justify","skill","Paper","elevation","element","App","Container","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbe47091.chunk.js","sourcesContent":["import React from 'react';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\nimport './Timeline.css'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CustomTimeline = ({title, icon, children}) => {\r\n    return (\r\n        <Timeline className='timeline'>\r\n            <TimelineItem className={'timeline_firstItem'}>\r\n                <TimelineSeparator>\r\n                    <TimelineDot className={'timeline_dot_header'}>\r\n                        {icon}\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Typography variant='h6' className='timeline_header'>\r\n                        {title} \r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            {children}\r\n        </Timeline>\r\n    )\r\n}\r\n\r\nexport const CustomTimelineSeparator = () => (\r\n    <TimelineSeparator className={'separator_padding'}> \r\n        <TimelineDot variant={'outlined'} className={'timeline_dot'}/>\r\n        <TimelineConnector />\r\n    </TimelineSeparator>\r\n);\r\nexport default CustomTimeline\r\n","import FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\n\r\nconst resumeData =  {\r\n    name: \"Vijay Ugru\",\r\n    title: \"Software Engineer\",\r\n    email: \"ugru@usc.edu\",\r\n    address: \"720 West 27th Street, LA, CA\",\r\n    phone: \"(213) 255-6193\",\r\n\r\n    socials: {\r\n        Facebook: {\r\n            link: \"https://www.facebook.com/vijay.ugru\",\r\n            text: \"Vijay\",\r\n            icon: <FacebookIcon />\r\n        },\r\n        Twitter: {\r\n            link: \"https://twitter.com/vijai_008\",\r\n            text: \"Vijay\",\r\n            icon: <TwitterIcon />\r\n        },\r\n        LinkedIn: {\r\n            link: \"https://www.linkedin.com/in/vijay-ugru\",\r\n            text: \"Vijay\",\r\n            icon: <LinkedInIcon />\r\n        },\r\n        GitHub: {\r\n            link: \"https://github.com/ugruvijay\",\r\n            text: \"Vijay\",\r\n            icon: <GitHubIcon />\r\n        },\r\n    },\r\n\r\n    about: \"I am a Computer Science graduate student at the University of Southern California with a focus on Machine Learning, Artificial Intelligence and Natural Language Processing. I have worked for two years as a Software Developer at Robert Bosch Engineering and Business Solutions Pvt. Ltd., India, wherein I developed Windows Desktop Applications using WPF and WCF technologies.\\n\\nI am currently looking for co-op (January 2021)/full-time (June 2021) opportunities as a Software Engineer.\",\r\n\r\n    experiences: [\r\n        {\r\n            title: 'Qualcomm Inc.',\r\n            subtitle: 'Interim Software Engineer Intern',\r\n            date: 'May 2020 - Aug 2020',\r\n            description: '•\tDeveloped system tool and automation framework for validation of new positioning technologies like visual aided precise positioning for mobile and automotive platforms.\\n•\tReduced the process workflow time by 90% by creating a scalable data processing and visualization pipeline.\\n•\tImplemented asynchronous task to extract statistical data from log files; utilized Google Charts to generate CDF and Time Series plots to reveal underlying trend and determine the performance of the system. \\n•\tDesigned a rich and interactive dashboard to provide at-a-glance view of KPIs like Horizontal and Cross Track Errors.'\r\n        },\r\n        {\r\n            title: 'Robert Bosch Engineering and Business Solutions',\r\n            subtitle: 'Associate Software Engineer',\r\n            date: 'Aug 2016 - Jul 2018',\r\n            description: '•\tDeveloped and owned 6 new user interfaces for efficient handling and diagnostics of spot welding.\\n• Ensured load time to be within 2 seconds using data virtualization and incremental loading on Syncfusion DataGrid.\\n• Improved productivity by 10 man-hours by proposing and implementing an automation tool to generate code files.'\r\n        },\r\n        {\r\n            title: 'Global Digital Vision Pty. Ltd.',\r\n            subtitle: 'Software Engineer Intern',\r\n            date: 'Feb 2016 - May 2016',\r\n            description: '•\tDeveloped Android Application for smartwatch; used Bluetooth 4.0 (BLE) for communication between watch and sensors.\\n•\tIntegrated various sensors (BP, SPO2, Thermometer, Weighing Scale and Blood sugar) with smartwatch.\\n•\tDesigned a machine learning model to detect an anomaly in health vitals by classifying patient’s health data as normal or abnormal using k-Nearest Neighbors.\\n•\tCreated an Android Application as test harness to do complete automated system testing.'\r\n        },\r\n    ],\r\n\r\n    educations: [\r\n        {\r\n            title: 'University of Southern California',\r\n            subtitle: 'Master of Science in Compputer Science',\r\n            date: 'Aug 2019 - May 2021',\r\n            description: '•\tRelevant Courses: Machine Learning, Artificial Intelligence, Natural Language Processing, Data Mining, Web Technologies'\r\n        },\r\n        {\r\n            title: 'B. V. Bhoomaraddi College of Engineering and Technology',\r\n            subtitle: 'Bachelor of Engineering in Computer Science',\r\n            date: 'Sep 2012 - Jun 2016',\r\n            description: '•\tRelevant Courses: Operating System, Database Management Systems, Design and Analysis of Algorithms, Theory of Computation'\r\n        }\r\n    ],\r\n\r\n    projects: [\r\n        {\r\n            tag: 'Web',\r\n            image: 'http://localhost:3000/assets/images/news-website.png',\r\n            title: 'Project 1',\r\n            caption: 'Caption 1',\r\n            description: 'Sample description',\r\n            links: [\r\n                {\r\n                    link: 'https://www.github.com',\r\n                    icon: <GitHubIcon />\r\n                },\r\n                {\r\n                    link: 'https://www.linkedin.com',\r\n                    icon: <LinkedInIcon />\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            tag: 'Web',\r\n            image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png',\r\n            title: 'Project 2',\r\n            caption: 'Caption 1',\r\n            description: 'Sample description',\r\n            links: [\r\n                {\r\n                    link: 'https://www.github.com',\r\n                    icon: <GitHubIcon />\r\n                },\r\n                {\r\n                    link: 'https://www.linkedin.com',\r\n                    icon: <LinkedInIcon />\r\n                },\r\n                {\r\n                    link: 'https://www.youtube.com',\r\n                    icon: <YouTubeIcon />\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            tag: 'Python',\r\n            image: 'https://wallpaperaccess.com/full/1192976.jpg',\r\n            title: 'Autonomous Mars Rover Simulation',\r\n            caption: 'Search for the optimal paths using BFS, UCS and A*',\r\n            description: 'The goal of the project was to simulate a closed Martian Environment where-in a rover tries to search best possible path to the target location on a rocky terrain using both Uninformed and Informed search algorithms such as BFS, UCS and A*. It also involved analysis of running time complexities of these algorithms.',\r\n            links: [\r\n                {\r\n                    link: 'https://github.com/ugruvijay/AI-PathFinder',\r\n                    icon: <GitHubIcon />\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            tag: 'Python',\r\n            image: 'https://i.pinimg.com/originals/76/38/cc/7638cc8bdd51639f09e596e73382c70a.jpg',\r\n            title: 'Halma: AI game playing agent',\r\n            caption: 'Adversarial game also called as Chinese Checkers',\r\n            description: 'The goal of the project was to simulate a closed Martian Environment where-in a rover tries to search best possible path to the target location on a rocky terrain using both Uninformed and Informed search algorithms such as BFS, UCS and A*. It also involved analysis of running time complexities of these algorithms.',\r\n            links: [\r\n                {\r\n                    link: 'https://github.com/ugruvijay/AI-Halma',\r\n                    icon: <GitHubIcon />\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            tag: 'Java',\r\n            image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png',\r\n            title: 'Java Project 1',\r\n            caption: 'Caption 1',\r\n            description: 'Sample description',\r\n            links: [\r\n                {\r\n                    link: 'https://www.github.com',\r\n                    icon: <GitHubIcon />\r\n                },\r\n                {\r\n                    link: 'https://www.linkedin.com',\r\n                    icon: <LinkedInIcon />\r\n                },\r\n                {\r\n                    link: 'https://www.youtube.com',\r\n                    icon: <YouTubeIcon />\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n\r\n    skills: [\r\n        {\r\n            title: \"Frontend\",\r\n            description: [\r\n                \"ReactJS\",\r\n                \"Angular\",\r\n                \"TypeScript\",\r\n                \"JavaScript\",\r\n                \"Bootstrap\",\r\n                \"Material UI\"\r\n            ]\r\n        },\r\n        {\r\n            title: \"Backend\",\r\n            description: [\r\n                \"NodeJS\",\r\n                \"Java\",\r\n                \"C# .NET\",\r\n                \"Python\"\r\n            ]\r\n        },\r\n        {\r\n            title: \"Libraries\",\r\n            description: [\r\n                \"Numpy\",\r\n                \"Matplotlib\",\r\n            ]\r\n        },\r\n        {\r\n            title: \"Databases\",\r\n            description: [\r\n                \"MySQL\",\r\n                \"MS SQL Server\"\r\n            ]\r\n        },\r\n        {\r\n            title: \"Version Control\",\r\n            description: [\r\n                \"Git\",\r\n                \"GitHub\",\r\n                \"Perforce\",\r\n                \"Jenkins\"\r\n            ]\r\n        },\r\n        {\r\n            title: \"Libraries/Packages\",\r\n            description: [\r\n                \"NumPy\",\r\n                \"Pandas\",\r\n                \"NLTK\",\r\n                \"TensorFlow\",\r\n                \"Matplotlib\"\r\n            ]\r\n        },\r\n        {\r\n            title: \"Libraries/Packages\",\r\n            description: [\r\n                \"NumPy\",\r\n                \"Pandas\",\r\n                \"NLTK\",\r\n                \"TensorFlow\",\r\n                \"Matplotlib\"\r\n            ]\r\n        },\r\n    ]\r\n}\r\n\r\nexport default resumeData;","export default __webpack_public_path__ + \"static/media/dp.764d4a6c.jpg\";","import { Typography } from '@material-ui/core'\r\nimport React from 'react';\r\nimport CustomTimeline, {CustomTimelineSeparator} from '../Timeline/Timeline';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\n\r\nimport resumeData from '../../utils/resumeData';\r\nimport './Profile.css'\r\nimport dp from '../../assets/images/dp.jpg';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\nconst CustomTimelineItem = ({title, text, link}) => (\r\n    <TimelineItem>\r\n        <CustomTimelineSeparator />\r\n        <TimelineContent className=\"timeline_content\">\r\n            {link ? (\r\n            <Typography className=\"timelineItem_text\">\r\n                <span>{title}:</span>{\" \"}\r\n                <a href={link} target='_blank' rel=\"noreferrer noopener\">\r\n                    {text}\r\n                </a>\r\n            </Typography>\r\n            ) : \r\n            (\r\n                <Typography className=\"timelineItem_text\">\r\n                    <span>{title}:</span>{\" \"}\r\n                    {text}\r\n                </Typography>\r\n            )}\r\n        </TimelineContent>\r\n    </TimelineItem>\r\n)\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className='profile container_shadow'>\r\n            <div className='profile_name'>\r\n                <Typography className='name'>{resumeData.name}</Typography>\r\n                <Typography className='title'>{resumeData.title}</Typography>\r\n            </div>\r\n            <figure className='profile_image'>\r\n                <img src={dp} alt=\"\" />\r\n            </figure>\r\n            <div className='profile_info'>\r\n                <CustomTimeline icon={<PersonOutlineIcon />}> \r\n                    <CustomTimelineItem title='Name' text={resumeData.name}/>\r\n                    <CustomTimelineItem title='Title' text={resumeData.title}/>\r\n                    <CustomTimelineItem title='Email' text={resumeData.email}/>\r\n\r\n                    {Object.keys(resumeData.socials).map((key, i) => (\r\n                        <CustomTimelineItem key={i} title={key} text={resumeData.socials[key].text} link={resumeData.socials[key].link} />\r\n                    ))}\r\n                </CustomTimeline>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react';\r\n\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { NavLink, withRouter} from 'react-router-dom';\r\nimport { HomeRounded } from '@material-ui/icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport resumeData from '../../utils/resumeData';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n    const pathName = props?.location?.pathName;\r\n    console.log(pathName)\r\n    return (\r\n        <Navbar expand='lg' sticky='top' className='header'>\r\n            <Nav.Link as={NavLink} to='/' className='header_navlink'>\r\n                <Navbar.Brand className='header_home'>\r\n                    <HomeRounded />\r\n                </Navbar.Brand>\r\n            </Nav.Link>\r\n\r\n            <Navbar.Toggle />\r\n\r\n            <Navbar.Collapse>\r\n                <Nav className='header_left'>\r\n                    <Nav.Link \r\n                        as={NavLink} \r\n                        to='/' \r\n                        className={pathName === '/' ? 'header_link_active' : 'header_link'}>Resume</Nav.Link>\r\n                    <Nav.Link \r\n                        as={NavLink} \r\n                        to='/portfolio' \r\n                        className={pathName === '/portfolio' ? 'header_link_active' : 'header_link'}>Portfolio\r\n                    </Nav.Link>\r\n                </Nav>\r\n\r\n                <div className='header_right'>\r\n                    {Object.keys(resumeData.socials).map((key, i) => \r\n                        <a key={i} href={resumeData.socials[key].link} rel=\"noreferrer noopener\" target='_blank'>{resumeData.socials[key].icon}</a> \r\n                    )}\r\n                    {/* <CustomButton text={'Hire Me'} icon={<Telegram />} /> */}\r\n                </div>\r\n\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport './Footer.css';\r\n\r\nimport resumeData from '../../utils/resumeData';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <div className='footer_left'>\r\n                <Typography className='footer_name'>{resumeData.name}</Typography>\r\n            </div>\r\n            <div className='footer_right'>\r\n                <Typography className='footer_copyright'>\r\n                    Designed and Developed by <a href=\"/\" target='_blank'>Vijay Ugru</a>\r\n                    <br />\r\n                    Idea from {\" \"}\r\n                    <a href=\"/\" target='_blank'>Tavonline</a>\r\n                </Typography>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react';\r\nimport { Grid, Tabs, Tab, Typography, CardActionArea, Card, CardMedia, CardContent, Grow, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\n\r\nimport resumeData from '../../utils/resumeData';\r\n\r\nimport './Portfolio.css';\r\n\r\nconst Portfolio = () => {\r\n    const [tabValue,  setTabValue] = useState(\"All\");\r\n    const [projectDialog, setProjectDialog] = useState(false);\r\n\r\n    return (\r\n        <Grid container spacing={1} className='section pb_45'>\r\n            <Grid item className='section_title mb_20'>\r\n                <span></span>\r\n                <h6 className='section_title_text'>Portfolio</h6>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Tabs TabIndicatorProps={{style: {background:'white'}}} value={tabValue} className='custom_tabs' onChange={(event,newValue) => setTabValue(newValue)}>\r\n                    <Tab label='All' value='All' className={tabValue === 'All' ? 'custom_tabs_item active' : 'custom_tabs_item'}></Tab>\r\n                    {[...new Set(resumeData.projects.map(item => item.tag))].map((tag, i) => (\r\n                        <Tab key={i} label={tag} value={tag} className={tabValue === tag ? 'custom_tabs_item active': 'custom_tabs_item'} />\r\n                    ))}\r\n                </Tabs>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={3} >\r\n                    {resumeData.projects.map((project, i) => (\r\n                        <React.Fragment key={i}>\r\n                            {tabValue === project.tag || tabValue === 'All' ? (\r\n                                <Grid item xs={12} sm={6} md={4} lg={4}>\r\n                                    <Grow  in timeout={1000}>\r\n                                        <Card className='custom_card' onClick={() => setProjectDialog(project)}>\r\n                                            <CardActionArea>\r\n                                                <CardMedia className='custom_card_image' image={project.image} title={project.title}></CardMedia>\r\n                                                <CardContent>\r\n                                                    <Typography variant={'body2'} className='custom_card_title'>{project.title}</Typography>\r\n                                                    <Typography variant={'body2'} className='custom_card_caption'>{project.caption}</Typography>\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Grow>\r\n                                </Grid>\r\n                            ) : null}\r\n                        </React.Fragment>\r\n                    ))}\r\n\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={projectDialog} onClose={() => setProjectDialog(false)} className='project_dialog' >\r\n                <DialogTitle onClose={() => setProjectDialog(false)}>\r\n                    {projectDialog.title}\r\n                </DialogTitle>\r\n                <img src={projectDialog.image} alt='' className='project_dialog_image'/>\r\n                <DialogContent >\r\n                    <Typography className='project_dialog_description'>{projectDialog.description}</Typography>\r\n                    \r\n                </DialogContent>\r\n                <DialogActions className='project_dialog_actions'>\r\n                    {projectDialog?.links?.map((link, i) => (\r\n                        <a key={i} className='project_dialog_icon' href={link.link} target='_blank' rel=\"noreferrer noopener\">{link.icon}</a>\r\n                    ))}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Portfolio\r\n","import React from 'react';\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\nimport CustomTimeline, {CustomTimelineSeparator} from '../../components/Timeline/Timeline';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nimport resumeData from '../../utils/resumeData';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport './Resume.css';\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <>\r\n            <Grid container className='section pb_45'>\r\n                <Grid item className='section_title mb_30'>\r\n                    <span></span>\r\n                    <h6 className='section_title_text'>About Me</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant='body2' className='about_me_text'>{resumeData.about}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container className='section'>\r\n                <Grid item className='section_title mb_30'>\r\n                    <span></span>\r\n                    <h6 className='section_title_text'>Resume</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container className='resume_timeline'>\r\n                        <Grid item sm={12} md={6}>\r\n                            <CustomTimeline title='Experience' icon={<WorkIcon />}>\r\n                                {resumeData.experiences.map((experience, i) => (\r\n                                    <TimelineItem key={i}>\r\n                                        <CustomTimelineSeparator />\r\n                                        <TimelineContent  className='timeline_content'>\r\n                                            <Typography className='timeline_title'>{experience.title}</Typography>\r\n                                            <Typography variant='caption' className='timeline_subtitle'>{experience.subtitle}</Typography><br />\r\n                                            <Typography variant='caption' className='timeline_date'>{experience.date}</Typography>\r\n                                            <Typography variant='body2' className='timeline_description'>{experience.description}</Typography>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>))}\r\n                            </CustomTimeline>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={12} md={6}>\r\n                            <CustomTimeline title='Education' icon={<SchoolIcon />}>\r\n                                {resumeData.educations.map((education, i) => (\r\n                                    <TimelineItem key={i}>\r\n                                        <CustomTimelineSeparator />\r\n                                        <TimelineContent  className='timeline_content'>\r\n                                            <Typography className='timeline_title'>{education.title}</Typography>\r\n                                            <Typography variant='caption' className='timeline_subtitle'>{education.subtitle}</Typography><br/>\r\n                                            <Typography variant='caption' className='timeline_date'>{education.date}</Typography>\r\n                                            <Typography variant='body2' className='timeline_description'>{education.description}</Typography>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>))}\r\n                            </CustomTimeline>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container className='section'>\r\n                <Grid item className='section_title mb_30'>\r\n                    <span></span>\r\n                    <h6 className='section_title_text'>Skills</h6>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3} justify=\"space-between\" className=\"section graybg pb_45\">\r\n                    {resumeData.skills.map((skill) => (\r\n                        <Grid item xs={12} sm={6} md={3}>\r\n                            <Paper elevation={0} className=\"skill\">\r\n                                <Typography variant=\"h6\" className=\"skill_title\">\r\n                                    {skill.title}\r\n                                </Typography>\r\n                                {skill.description.map((element) => (\r\n                                    <Typography variant=\"body2\" className=\"skill_description\">\r\n                                        <TimelineDot variant={'outlined'} className='timeline_dot' />\r\n                                        {element}\r\n                                    </Typography>\r\n                                ))}\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))}\r\n\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","import { Container, Grid } from '@material-ui/core';\nimport Profile from './components/Profile/Profile';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Portfolio from './pages/Portfolio/Portfolio';\nimport Resume from './pages/Resume/Resume';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Container className={'top_60'}>\n      <Grid container spacing={8}>\n        <Grid item lg={3} md={4} sm={12} xs={12}>\n          <Profile />\n        </Grid>\n\n        <Grid item xs>\n          <Router>\n            <Header />\n            <div className='main_content container_shadow'>\n              <Switch>\n                <Route path='/portfolio'>\n                  <Portfolio />\n                </Route>\n                <Route path='/'>\n                  <Resume />\n                </Route>\n              </Switch>\n            </div>\n            \n          </Router>\n\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}